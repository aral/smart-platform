#!/usr/bin/env perl

use strict;
use warnings;

use lib 'lib';

use RSP;
use Mojo::Server::Daemon::Prefork;

use Getopt::Long;
my $result = GetOptions (
    "daemonize" => \my $daemonize,
    "prefork|f" => \my $prefork,
    "port=i" => \my $port,
    "help" => \my $help,
    "verbose"  => \my $verbose);
    
$0 = "rsp";

if($help || !$result){
print <<EOM;
$0 - Joyent Smart Platform runner

Options:
    --daemonize -d      Forks process into background as a daemon
    --prefork   -f      Uses the Mojo Prefork server
    --port      -p      Specify which port to list on
    --help      -h      Prints this usage message
    --verbose   -v      Verbose logging and debugging information (TODO)

EOM
exit 1;
}


$port = $port ? $port : RSP->config->{mojo}->{port};
my $opts = {
    pid_file => File::Spec->catfile( RSP->config->{_}->{root}, 'run', 'rsp.pid' ),
    app => RSP->new,
    (defined($port) ? (port => $port) : ()),
}; 

my $server = $prefork 
       ? Mojo::Server::Daemon::Prefork->new({ 
                       %$opts, max_requests => 1, min_spare_servers => 5, 
                       max_spare_servers => 30, max_servers => 80 }) 
       : Mojo::Server::Daemon->new($opts);

if($daemonize){
    $server->daemonize;
}

if ( defined($port) ) {
  if ( $port =~ /\-/ ) {
    my ($start, $end) = split(/\-/, $port);
    my @range = ($start..$end);
    print "configuring " . (scalar(@range)-1) . " ports from $start to $end\n";
    foreach my $tmp_port ( @range ) {
      $SIG{CHLD} = $SIG{HUP} = "IGNORE";
      if (!fork()) {
	$server->port( $tmp_port );
        warn "starting $$ on port $tmp_port";
	$server->run;
	exit;
      }
    }
  } else {
    $server->run;
  }
} else {
  $server->run;
}

